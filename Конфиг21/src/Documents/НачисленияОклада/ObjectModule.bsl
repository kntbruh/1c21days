
Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	// регистр ЗаработнаяПлата
	Движения.ЗаработнаяПлата.Записывать = Истина;
	Движение = Движения.ЗаработнаяПлата.Добавить();
	Движение.Сторно = Ложь;
	Движение.ВидРасчета = 1;
	Движение.ПериодДействияНачало = НачалоМесяца(Дата);
	Движение.ПериодДействияКонец = КонецМесяца(Дата);
	Движение.ПериодРегистрации = Дата;
	Движение.Сотрудник = Сотрудник;
	Движение.РасчетныеДанные = Сумма;
	
	Движения.Записать();
	      	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаработнаяПлатаДанныеГрафика.РаюочийДеньПериодДействия КАК Норма,
		|	ЗаработнаяПлатаДанныеГрафика.РаюочийДеньФактическийПериодДействия КАК Факт,
		|	ЗаработнаяПлатаДанныеГрафика.РасчетныеДанные КАК РасчетныеДанные
		|ИЗ
		|	РегистрРасчета.ЗаработнаяПлата.ДанныеГрафика(Регистратор = &Регистратор) КАК ЗаработнаяПлатаДанныеГрафика";
	         Запрос.УстановитьПараметр("Регистратор", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		   ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ВыборкаДетальныеЗаписи.Следующий();
	Если ВыборкаДетальныеЗаписи.Норма <> 0 Тогда
		
		Оклад = ВыборкаДетальныеЗаписи.РасчетныеДанные * ВыборкаДетальныеЗаписи.Факт/ВыборкаДетальныеЗаписи.Норма;
		Движение.Сумма = Оклад;
		Движения.ЗаработнаяПлата.Записать();
		Движение = Движения.ДолгиПоЗаработнойПлате.Записать = Истина;

		Движение = Движения.ДолгиПоЗаработнойПлате.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Сотрудник = Сотрудник;
		Движение.Сумма = Оклад;

	Иначе
		Сообщить("неверно");
		КонецЕсли;
	
	КонецЕсли;
КонецПроцедуры
