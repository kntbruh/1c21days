
Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	// регистр Взаиморасчеты Приход
	Движения.Взаиморасчеты.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.Взаиморасчеты.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Контрагент = Клиент;
		Движение.Сумма = СуммаДокумента;
	КонецЦикла;

	// регистр Продажи 
	Движения.Продажи.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.Продажи.Добавить();
		Движение.Период = Дата;
		Движение.Клиент = Клиент;
		Движение.Номенклатура = ТекСтрокаТовары.Товар;
		Движение.Количество = ТекСтрокаТовары.Количество;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
	КонецЦикла;

	// регистр ТоварыНаСкладах Расход
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ТоварыНаСкладах.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаТовары.Товар;
		Движение.Склад = Склад;
		Движение.Количетсво = ТекСтрокаТовары.Количество;
	КонецЦикла;
	Движения.Записать();
	Если Режим = РежимПроведенияДокумента.Оперативный Тогда
		             	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыНаСкладахОстатки.Склад КАК Склад,
		|	ТоварыНаСкладахОстатки.КоличетсвоОстаток КАК Количетсво
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(
		|			,
		|			Склад = &Склад
		|				И Номенклатура В
		|					(ВЫБРАТЬ
		|						РеализацияТоваровИУслуг.Товары.(				РеализацияТоваровИУслуг.Товары.Ссылка КАК Ссылка,
		|							РеализацияТоваровИУслуг.Товары.НомерСтроки КАК НомерСтроки,
		|							РеализацияТоваровИУслуг.Товары.Товар КАК Товар,
		|							РеализацияТоваровИУслуг.Товары.Количество КАК Количество,
		|							РеализацияТоваровИУслуг.Товары.Цена КАК Цена,
		|							РеализацияТоваровИУслуг.Товары.Сумма КАК Сумма) КАК Товары
		|					ИЗ
		|						Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
		|					ГДЕ
		|						РеализацияТоваровИУслуг.Ссылка = &Ссылка)) КАК ТоварыНаСкладахОстатки
		|ГДЕ
		|	ТоварыНаСкладахОстатки.КоличетсвоОстаток < 0";
	
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Отказ = Истина;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сообщить("Недостаточно товара "+ВыборкаДетальныеЗаписи.Номенклатура+" в количестве "+ВыборкаДетальныеЗаписи.Количество);
	КонецЦикла;
	   КонецЕсли;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

		КонецЕсли;
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Если НЕ Отказ Тогда
	Движения.СебестоимостьТовара.Записывать = Истина;
	      	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СебестоимостьТовараОстатки.Номенклатура КАК Номенклатура,
		|	СебестоимостьТовараОстатки.СуммаОстаток КАК Сумма,
		|	СебестоимостьТовараОстатки.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.СебестоимостьТовара.Остатки(
		|			&МоментВремени,
		|			Номенклатура В
		|				(ВЫБРАТЬ
		|					РеализацияТоваровИУслуг.Товары.(			РеализацияТоваровИУслуг.Товары.Ссылка КАК Ссылка,
		|						РеализацияТоваровИУслуг.Товары.НомерСтроки КАК НомерСтроки,
		|						РеализацияТоваровИУслуг.Товары.Товар КАК Товар,
		|						РеализацияТоваровИУслуг.Товары.Количество КАК Количество,
		|						РеализацияТоваровИУслуг.Товары.Цена КАК Цена,
		|						РеализацияТоваровИУслуг.Товары.Сумма КАК Сумма) КАК Товары
		|				ИЗ
		|					Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
		|				ГДЕ
		|					РеализацияТоваровИУслуг.Ссылка = &Ссылка)) КАК СебестоимостьТовараОстатки";
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи <> 0 Тогда
		СебестоимостьЕдиницы = ВыборкаДетальныеЗаписи.Сумма/ВыборкаДетальныеЗаписи.Количество	КонецЦикла;
	Иначе СебестоимостьЕдиницы = 0;
		КонецЕсли;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
Движение = Движения.СебестоимостьТовара.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		
		СтрокаТЧ = Товары.Найти(ВыборкаДетальныеЗаписи.Номенклатура, "Товар");
		
		Движение.Номенклатура =ВыборкаДетальныеЗаписи.Товар;
				Движение.Количетсво = СтрокаТЧ.Количество;
				Движение.Сумма = СебестоимостьЕдиницы * СтрокаТЧ.Количество;



КонецЦикла;
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СуммаДокумента = 0;
	Для Каждого  СтрокаТЧ ИЗ Товары Цикл
		СуммаДокумента = СуммаДокумента + СтрокаТЧ.Сумма
		КонецЦикла;
КонецПроцедуры

